/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.proyecto_estacionamiento;

import java.util.List;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author grija
 */
public class CargarVehiculos extends javax.swing.JPanel {

    /**
     * Creates new form CargarVehiculos
     */
       List<Usuarios> usuario = new ArrayList<>();


    public CargarVehiculos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tablita = new javax.swing.JTable();
        BtnCargar = new javax.swing.JButton();
        BtnSubir = new javax.swing.JButton();
        BtnGuardarDatoss = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("CARGAR ARCHIVOS CSV");

        Tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tablita);

        BtnCargar.setText("Cargar archivo");
        BtnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCargarActionPerformed(evt);
            }
        });

        BtnSubir.setText("Crear nuevo archivo");
        BtnSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSubirActionPerformed(evt);
            }
        });

        BtnGuardarDatoss.setText("Guardar archivo");
        BtnGuardarDatoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarDatossActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSubir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnGuardarDatoss, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BtnCargar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnGuardarDatoss)
                    .addComponent(BtnSubir))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCargarActionPerformed
         // TODO add your handling code here:
        
        JFileChooser seleccionarArchivo = new JFileChooser();
        FileNameExtensionFilter filtro= new FileNameExtensionFilter("Archivos csv", "csv");
        
        seleccionarArchivo.setFileFilter(filtro);
        
        int seleccionar = seleccionarArchivo.showOpenDialog(this);
        
        if(seleccionar== JFileChooser.APPROVE_OPTION){
            File archivo= seleccionarArchivo.getSelectedFile();
            cargarArchivo(archivo);   
        }
    }//GEN-LAST:event_BtnCargarActionPerformed

    private void BtnSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSubirActionPerformed
        // TODO add your handling code here:
        
                                                     
        JFileChooser selector = new JFileChooser();

        selector.setSelectedFile(new File("usuarios.csv")); // nonbre del archvi quye se guardo

        int resultado = selector.showSaveDialog(this);
        
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = selector.getSelectedFile();

        
        if (!archivo.getName().toLowerCase().endsWith(".csv")) { // verificarr que sea cvcvs

            archivo = new File(archivo.getAbsolutePath() + ".csv");
        }

        guardarArchivoCSV(archivo);
    }  
    }//GEN-LAST:event_BtnSubirActionPerformed

    private void BtnGuardarDatossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarDatossActionPerformed
        // TODO add your handling code here:
                                                        
        
        Usuarios.limpiarLista(); //limpiar antes de todo

        DefaultTableModel model = (DefaultTableModel) Tablita.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            Usuarios u = new Usuarios();
            u.setNombre(String.valueOf(model.getValueAt(i, 0)));
            u.setProfesion(String.valueOf(model.getValueAt(i, 1)));
            u.setTipodeVehiculo(String.valueOf(model.getValueAt(i, 2)));
            u.setPlaca(String.valueOf(model.getValueAt(i, 3)));
            u.setModelo(String.valueOf(model.getValueAt(i, 4)));
            u.setColor(String.valueOf(model.getValueAt(i, 5)));


            Usuarios.agregarUsuario(u); // se guarda eb la  global
        }

        JOptionPane.showMessageDialog(this,
            "Guadardados existosamente");
    
    }//GEN-LAST:event_BtnGuardarDatossActionPerformed

    public void guardarArchivoCSV(File archivo) {
        
    try (PrintWriter pw = new PrintWriter(
            new OutputStreamWriter(new FileOutputStream(archivo), java.nio.charset.StandardCharsets.UTF_8))) {

        // titulos del archiuvo
        pw.println("Nombre,Profesion,Tipo de Vehiculo,Placa,Modelo,Color");

        // guradrr los datos
        for (Usuarios u : usuario) {
            
            pw.printf("%s,%s,%s,%s,%s,%s%n",
                    
                    n(u.getNombre()),
                    n(u.getProfesion()),
                    n(u.getTipodeVehiculo()),
                    n(u.getPlaca()),
                    n(u.getModelo()),
                    n(u.getColor()));
        }

        JOptionPane.showMessageDialog(this, "Guardado correctamente.");
        
    } catch (IOException e) {
        
        JOptionPane.showMessageDialog(this, "Error al guardar" + e.getMessage());
    }
}
        private static String n(String s) { 
            // deja en blnaco sui no tiene datos 
            return s == null ? "" : s;
        }

    
    
     public void cargarArchivo(File archivo) {
         //FileReader fr= null;
         BufferedReader br= null; //leeer linea por lenuia
         
         usuario.clear();
         
         try{
             
             
             //fr= new FileReader(archivo);    versiones viejas usar por cualquier cosa xd
             //br= new BufferedReader(fr);
             
             
             br = new BufferedReader(
                new InputStreamReader(new FileInputStream(archivo), java.nio.charset.StandardCharsets.UTF_8));
             
             String linea;
             boolean primera = true;
             
             while((linea= br.readLine())!=null){
                 
                 
                 //quitar el bombom
                 if (primera && !linea.isEmpty() && linea.charAt(0) == '\uFEFF') {
                 linea = linea.substring(1);
                 }
                 
                 // saltar los totulos 
                if (primera) {
                    String l = linea.toLowerCase();
                    if (l.contains("nombre") && l.contains("profesion")) {
                        primera = false;
                        continue;
                    }
                    primera = false;
                }
                 
                 Usuarios user= new Usuarios();
                 
                 String arreglo []= linea.split(",",-1); // el -1 para no elimiar los esapcios vacios
                 if(arreglo.length>=6){
                     user.setNombre(arreglo[0].trim());
                     user.setProfesion(arreglo[1].trim());
                     user.setTipodeVehiculo(arreglo[2].trim());
                     user.setPlaca(arreglo[3].trim());
                     user.setModelo(arreglo[4].trim());
                     user.setColor(arreglo[5].trim());
                     
                     usuario.add(user);
                     
                     
                 }
             }
             
             
            } catch (Exception ex) {
           ex.printStackTrace();
           
       } finally {
           try {
               if (br != null) br.close();
               
           } catch (Exception ex) {
               ex.printStackTrace();
           }
       }

        llenartabla(); 
        
        
     }
     
     public void llenartabla() {
         
        DefaultTableModel md = new DefaultTableModel(
                
                
            new String[]{"Nombre","Profesion","Tipo de vehiculo","Placa","Modelo","Color"}, 0
                
                
        );

        for (int i = 0; i < usuario.size(); i++) {
            
              Usuarios uss = usuario.get(i);
            
            md.addRow(new Object[]{
                
                uss.getNombre(),
                uss.getProfesion(),
                uss.getTipodeVehiculo(),
                uss.getPlaca(),
                uss.getModelo(),
                uss.getColor()
              });
           }

           Tablita.setModel(md);
       }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCargar;
    private javax.swing.JButton BtnGuardarDatoss;
    private javax.swing.JButton BtnSubir;
    private javax.swing.JTable Tablita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
