/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.proyecto_estacionamiento;

import java.util.List;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author grija
 */
public class CargarVehiculos extends javax.swing.JPanel {

    /**
     * Creates new form CargarVehiculos
     */
       List<Usuarios> usuario = new ArrayList<>();
       List<Vehiculos> vehiculos = new ArrayList<>();
       List<Areas> areas = new ArrayList<>();
       List<Spots> spots = new ArrayList<>();


    public CargarVehiculos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tablita = new javax.swing.JTable();
        BtnCargar = new javax.swing.JButton();
        BtnSubir = new javax.swing.JButton();
        BtnGuardarDatoss = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("CARGAR ARCHIVOS CSV");

        Tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tablita);

        BtnCargar.setText("Cargar archivo");
        BtnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCargarActionPerformed(evt);
            }
        });

        BtnSubir.setText("Subir datos");
        BtnSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSubirActionPerformed(evt);
            }
        });

        BtnGuardarDatoss.setText("Guardar archivo");
        BtnGuardarDatoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarDatossActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSubir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnGuardarDatoss, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BtnCargar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnGuardarDatoss)
                    .addComponent(BtnSubir))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCargarActionPerformed
         // TODO add your handling code here:
        
        JFileChooser seleccionarArchivo = new JFileChooser();
        FileNameExtensionFilter filtro= new FileNameExtensionFilter("Archivos csv", "csv");
        
        seleccionarArchivo.setFileFilter(filtro);
        
        int seleccionar = seleccionarArchivo.showOpenDialog(this);
        
        if(seleccionar== JFileChooser.APPROVE_OPTION){
            File archivo= seleccionarArchivo.getSelectedFile();
            cargarArchivo(archivo);   
        }
    }//GEN-LAST:event_BtnCargarActionPerformed

    private void BtnSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSubirActionPerformed
        // TODO add your handling code here:
        
                                                      
    }//GEN-LAST:event_BtnSubirActionPerformed

    private void BtnGuardarDatossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarDatossActionPerformed
        // TODO add your handling code here:
                                                        
        
            DatosCentrales.USUARIOS.clear();
            DatosCentrales.USUARIOS.addAll(usuario);
            

            DatosCentrales.VEHICULOS.clear();
            DatosCentrales.VEHICULOS.addAll(vehiculos);
            
            DatosCentrales.AREAS.clear();           
            DatosCentrales.AREAS.addAll(areas);

            DatosCentrales.SPOTS.clear();            
            DatosCentrales.SPOTS.addAll(spots);
             JOptionPane.showMessageDialog(null,"Datos guardados en memoria");
    
    }//GEN-LAST:event_BtnGuardarDatossActionPerformed

    public void guardarArchivoCSV(File archivo) {
        
    try (PrintWriter pw = new PrintWriter(
            new OutputStreamWriter(new FileOutputStream(archivo), java.nio.charset.StandardCharsets.UTF_8))) {

        // titulos del archiuvo
        pw.println("Can√©,Nombre,Placa,Carrera");

        // guradrr los datos
        for (Usuarios u : usuario) {
            
            pw.printf("%s,%s,%s,%s%n",
                    
                    n(u.getCarne()),
                    n(u.getNombre()),
                    n(u.getPlaca()),
                    n(u.getCarrera()));
        }

        JOptionPane.showMessageDialog(this, "Guardado correctamente.");
        
    } catch (IOException e) {
        
        JOptionPane.showMessageDialog(this, "Error al guardar" + e.getMessage());
    }
}
        private static String n(String s) { 
            // deja en blnaco sui no tiene datos 
            return s == null ? "" : s;
        }

    
    
        public void cargarArchivo(File archivo) {
            //FileReader fr= null;
            BufferedReader br= null; //leeer linea por lenuia
         
           usuario.clear();

          try {
                br = new BufferedReader(new InputStreamReader(
                        new FileInputStream(archivo), java.nio.charset.StandardCharsets.UTF_8));

               
                String header = br.readLine();
                if (header == null) {
                    throw new IOException("Vacio");  // lee la promera liena para encabezado
                }

               
                if (!header.isEmpty() && header.charAt(0) == '\uFEFF') {   // quitar el bomms
                    header = header.substring(1);
                }

                
                String headerLow = header.toLowerCase().replace(" ", ""); // dejar en minuscula y sin espacos

                  if (headerLow.startsWith("placa,tipo_vehiculo,tipo_area")) { //filtro de emcabezado
                        
                        cargarvehiculos(br);        
                        llenarTablaVehiculos();    
                        
                    } else if (headerLow.startsWith("carne,nombre,placa,carrera")) {
                        
                        
                        usuario.clear();            
                        Cargarusuarios(br);        
                        llenartabla();             
                    } else if (headerLow.startsWith("area_id,nombre,capacidad,tipo_vehiculo")) {
                        
                       
                        cargarAreas(br);            
                        llenarTablaAreas();    
                        
                    } else if (headerLow.startsWith("spot_id,area_id,tipo_vehiculo,status")) {
                        
                        cargarSpots(br);
                        llenarTablaSpots();
                        
                    }else {
                        throw new IOException("Encabezado no reconocido: " + header);
                    }

            } catch (IOException ex) {
                
                JOptionPane.showMessageDialog(this, "Error al cargar: " + ex.getMessage());

            } finally {

                try { if (br != null) br.close();

                } catch (IOException ignore) {}

         
            }

                 }
     
     private void Cargarusuarios(BufferedReader br) throws IOException {
         
         usuario.clear();
        String linea;
                while ((linea = br.readLine()) != null) {
                    String[] a = linea.split(",", -1); // placa,ttipo_vehiculo,tipo_area
                    
            if (a.length >= 4) {
                Usuarios u = new Usuarios();
                u.setCarne(a[0].trim());
                u.setNombre(a[1].trim());
                u.setPlaca(a[2].trim());
                u.setCarrera(a[3].trim());
                usuario.add(u);
                        }
                    }
                }
     
     

    private void cargarvehiculos(BufferedReader br) throws IOException {
        
        vehiculos.clear();
        
        
         String linea;
            while ((linea = br.readLine()) != null) {
                String[] a = linea.split(",", -1); // placa,ttipo_vehiculo,tipo_area
                
            if (a.length >= 3) {
                Vehiculos v = new Vehiculos();
                v.setPlaca(a[0].trim());
                v.setTipoVehiculo(a[1].trim());
                v.setTipoArea(a[2].trim());
                vehiculos.add(v);
            }
        }
    }
    
    private void cargarAreas(BufferedReader br) throws IOException {
         
            areas.clear();
            
            
            String linea;
            
                    while ((linea = br.readLine()) != null) {
                        
                        String[] a = linea.split(",", -1); // mantener espcaops
                        if (a.length >= 4) {
                            
                            Areas ar = new Areas();
                            ar.IdArea = a[0].trim();
                            ar.nombreA = a[1].trim();
                            ar.capacidad = a[2].trim();
                            ar.TipoVehiculo = a[3].trim();
                            areas.add(ar);
                }
    }
}
    
    
    private void cargarSpots(BufferedReader br) throws IOException {
        
    spots.clear();
    String linea;
    while ((linea = br.readLine()) != null) {
        String[] a = linea.split(",", -1);
        if (a.length >= 4) {
            Spots s = new Spots();
            s.IdSpots = a[0].trim();
            s.IdArea = a[1].trim();
            s.TipoVehiculo = a[2].trim();
            s.Status = a[3].trim();
            spots.add(s);
        }
    }
}

    
     
     public void llenartabla() {
         
        DefaultTableModel md = new DefaultTableModel(
                
                
            new String[]{"Carn√©","Nombre","Placa","Carrera"}, 0
                
                
        );

        for (int i = 0; i < usuario.size(); i++) {
            
              Usuarios uss = usuario.get(i);
            
            md.addRow(new Object[]{
                
                uss.getCarne(),
                uss.getNombre(),
                uss.getPlaca(),
                uss.getCarrera(),
              });
           }

           Tablita.setModel(md);
       }
     
     private void llenarTablaVehiculos() {
         
    DefaultTableModel md = new DefaultTableModel(
            
            new String[]{"Placa", "Tipo de Vehiculo", "Tipo de Area"}, 0);

                for (Vehiculos v : vehiculos) {
                    
                    md.addRow(new Object[]{
                        v.getPlaca(), 
                        v.getTipoVehiculo(), 
                        v.getTipoArea() 
                    });
                }
                
             Tablita.setModel(md);
}
     
     
     private void llenarTablaAreas() {
         
         
    DefaultTableModel md = new DefaultTableModel(
            
        new String[]{"Id","Area","Capacidad","TipoVehiculo"}, 0
        );
    
      for (Areas a : areas) {
          
        md.addRow(new Object[]{ a.IdArea, a.nombreA, a.capacidad, a.TipoVehiculo });
       
      }
    
    
    Tablita.setModel(md);
    } 
     
     
     private void llenarTablaSpots() {
         
            DefaultTableModel md = new DefaultTableModel(
                new String[]{" ID Spot", "ID Area", "tipo de vehiculo", "Status"}, 0
            );
            for (Spots s : spots) {
                md.addRow(new Object[]{ s.IdSpots, s.IdArea, s.TipoVehiculo, s.Status });
            }
            Tablita.setModel(md);
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCargar;
    private javax.swing.JButton BtnGuardarDatoss;
    private javax.swing.JButton BtnSubir;
    private javax.swing.JTable Tablita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
